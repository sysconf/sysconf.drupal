#!/bin/bash
#
# GITTED IMPORT: /local.repository.git <refs/$GITTED_GIT_BRANCH/*> -> LXC container with Gitted state
#
# For now, guest are LXC containers only.
# In the future, it could allow other virtualization technologies.
#
# All "$GITTED_GIT_BRANCH/*" branches are scanned and each guest is updated with
# the new refs. Non-existant guest are created automatically if
# branch "$GITTED_GIT_BRANCH/{ GUEST }/master" exists.
#
#
. /usr/share/gitted/import.init.bash || exit 2

[ -z "$METAGITTED_CONF_PATH" ] && METAGITTED_CONF_PATH=mettagitted

git ls-tree $gitted_new_commit $METAGITTED_CONF_PATH/ | (

    while read mode type uuid path; do
        file=$(basename $path)
        if [ $(basename "$file") = "ipv4.forwarding.conf" ]; then
            nef_log "Updating conf: $path"
            echo -e "# GENERATED ON $(date -R) by $0 out of blob $uuid [$path] from commit $gitted_new_commit" >/etc/metagitted/ipv4.forwarding.conf
            mkdir -p /etc/metagitted
            git cat-file -p $uuid >>/etc/metagitted/ipv4.forwarding.conf

        elif echo "$file" | grep -q '\.guest$'; then

            METAGITTED_GUEST_NAME=$(basename $path .guest)
            (
                METAGITTED_GUEST_IMPORT_BRANCHES=
                METAGITTED_GUEST_EXPORT_BRANCHES=
                METAGITTED_GUEST_INIT_BRANCH=master
                METAGITTED_GUEST_MISSING_BRANCH=stop # could be: "ignore", "stop", "destroy"
                declare -A METAGITTED_GUEST_LOCAL

                source <(git cat-file -p $uuid)

                local_init_branch=${METAGITTED_GUEST_LOCAL[$METAGITTED_GUEST_INIT_BRANCH]}
                if [ -z "$local_init_branch" ]; then
                    nef_log -v "Executive branch '$METAGITTED_GUEST_INIT_BRANCH' not mapped to local branch. Ignoring guest."
                    nef_log -v "   (set METAGITTED_GUEST_LOCAL[$METAGITTED_GUEST_INIT_BRANCH]=<branch-name> in ${path})"
                else
                    executive_treeish=$(git show-ref --hash "refs/heads/${local_init_branch}")

                    if [ -z "$executive_treeish" ]; then
                        state=$(lxc-info -sHn "$METAGITTED_GUEST_NAME" 2>/dev/null | head -n 1)
                        [ -z "$state" ] && state=MISSING

                        nef_log "Executive branch '$local_init_branch' not present, LXC container '$METAGITTED_GUEST_NAME' is $state and METAGITTED_GUEST_MISSING_BRANCH=$METAGITTED_GUEST_MISSING_BRANCH"

                        case $METAGITTED_GUEST_MISSING_BRANCH in
                            ignore)
                                nef_log "  .. ignoring guest."
                                ;;
                            stop)
                                if [ $state = RUNNING ]; then
                                    nef_log "  .. stopping container $METAGITTED_GUEST_NAME ..."
                                    lxc-stop -n $METAGITTED_GUEST_NAME
                                else
                                    nef_log "  .. nothing to do."
                                fi
                                ;;
                            destroy)
                                if [ $state != MISSING ]; then
                                    nef_log "  .. destroying container $METAGITTED_GUEST_NAME ..."
                                    lxc-destroy -f -n $METAGITTED_GUEST_NAME
                                else
                                    nef_log "  .. nothing to do."
                                fi
                                ;;
                            *)
                                nef_log "  .. bad value \$METAGITTED_GUEST_MISSING_BRANCH: $METAGITTED_GUEST_MISSING_BRANCH"
                                ;;
                        esac
                    else
                        nef_log -v "executive branch '$local_init_branch' is $executive_treeish"
                        nef_log -v "lxc-create options are: $METAGITTED_GUEST_LXC_CREATE_OPTIONS"

                        branches=$(echo "$METAGITTED_GUEST_IMPORT_BRANCHES" | tr ":" " ")
                        refspecs=
                        for branch in $branches; do
                            # echo "branch: $branch"
                            local_branch=${METAGITTED_GUEST_LOCAL[$branch]}
                            if [ -n "$local_branch" ]; then
                                refspecs="$refspecs +$local_branch:$branch"
                            fi
                        done
                        if [ -z "$refspecs" ]; then
                            nef_log "no ref to push"
                        else
                            nef_log "pushing ref specs: $refspecs"
                            if [ -n "$METAGITTED_GUEST_LXC_CREATE_OPTIONS" ]; then
                                _opts="--lxc-create-opts $(echo $METAGITTED_GUEST_LXC_CREATE_OPTIONS | sed 's/ /% /g')"
                            fi
                            git push "ext::/usr/bin/gitted-client handle-remote-protocol --tree $executive_treeish $_opts $METAGITTED_GUEST_NAME %S" $refspecs \
                                || nef_fatal "git push failed with status $?"
                        fi
                    fi
                fi
            ) 2>&1 | nef_log_pipe "<$METAGITTED_GUEST_NAME>"
        else
            nef_log -v "Ignoring file: $GITTED_DATA_PATH/$file"
        fi
    done
)

/usr/share/metagitted/refresh-guest-status

################################################################################

# [ -z "$METAGITTED_EXECUTIVE_BRANCH" ] && METAGITTED_EXECUTIVE_BRANCH=master
# [ -z "$METAGITTED_BRANCH_PREFIX" ] && METAGITTED_BRANCH_PREFIX=guest/

# guests=$(git for-each-ref --format='%(refname)' "refs/heads/${METAGITTED_BRANCH_PREFIX}" | cut -d/ -f4 | uniq)

# for guest in $guests; do
#     nef_log "Processing guest: $guest"
#     guest_branch_prefix=${METAGITTED_BRANCH_PREFIX}${guest}/
#     executive_treeish=$(git show-ref --hash "refs/heads/${guest_branch_prefix}${METAGITTED_EXECUTIVE_BRANCH}")

#     if [ -z "$executive_treeish" ]; then
#         nef_log "  .. executive branch '$METAGITTED_EXECUTIVE_BRANCH' not present. Ignoring guest."
#     else
#         nef_log "  .. executive branch '$METAGITTED_EXECUTIVE_BRANCH' is $executive_treeish"
#         branches=$(git for-each-ref --format='%(refname)' "refs/heads/${guest_branch_prefix}" \
#             | sed -r 's/^([^/]+\/){4}//')

#         refspecs=
#         for branch in $branches; do
#             # echo "branch: $branch"
#             refspecs="$refspecs +${guest_branch_prefix}$branch:$branch"
#         done
#         nef_log "  .. pushing ref specs: $refspecs"

#         git push "ext::/usr/bin/gitted-client handle-remote-protocol --tree $executive_treeish $guest %S" $refspecs
#         [ "$?" -ne 0 ] && nef_fatal "git push failed with status $?"
#     fi

# done

################################################################################

# git show-ref --heads | grep " refs/heads/${GITTED_GIT_BRANCH}/"
# git show-refs
# [ -z "$METAGITTED_BRANCH" ] && nef_fatal "missing variable: METAGITTED_BRANCH"

# state_ref=$(gitted_state_ref_name $METAGITTED_BRANCH)
# state_commit=$(git show-ref -s $state_ref)
# state_tree=
# if [ -n "$state_commit" ]; then
#     state_tree="$(git ls-tree $state_ref)"
# fi

# if [ "$state_tree" != "$(git ls-tree $gitted_new_commit)" ]; then

#     nef_log "Git ref $METAGITTED_BRANCH has changed. Forwarding to container..."

#     (

#         echo

#     ) || nef_fatal "sub-command failed"


#     nef_log "$METAGITTED_BRANCH data has been imported and applied."
#     git update-ref -m "import $METAGITTED_BRANCH data from $gitted_new_commit" $state_ref $gitted_new_commit

# else
#     nef_log "No change for branch: $METAGITTED_BRANCH"
# fi
